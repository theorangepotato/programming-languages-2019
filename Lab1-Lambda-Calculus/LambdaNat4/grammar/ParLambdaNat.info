-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from ParLambdaNat.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pExp1 -> Exp1                               (1)
	%start_pExp2 -> Exp2                               (2)
	%start_pExp3 -> Exp3                               (3)
	%start_pExp4 -> Exp4                               (4)
	%start_pExp5 -> Exp5                               (5)
	%start_pExp -> Exp                                 (6)
	Id -> L_Id                                         (7)
	Program -> Exp                                     (8)
	Exp1 -> '\\' Id '.' Exp                            (9)
	Exp1 -> Exp2                                       (10)
	Exp2 -> 'if' Exp '=' Exp 'then' Exp 'else' Exp     (11)
	Exp2 -> 'let' Id '=' Exp 'in' Exp                  (12)
	Exp2 -> 'let' 'rec' Id '=' Exp 'in' Exp            (13)
	Exp2 -> 'fix' Exp                                  (14)
	Exp2 -> 'minus_one' Exp                            (15)
	Exp2 -> Exp3                                       (16)
	Exp3 -> Exp3 Exp4                                  (17)
	Exp3 -> Exp4                                       (18)
	Exp4 -> '0'                                        (19)
	Exp4 -> 'S' Exp4                                   (20)
	Exp4 -> Exp5                                       (21)
	Exp5 -> Id                                         (22)
	Exp5 -> '(' Exp ')'                                (23)
	Exp -> Exp1                                        (24)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'.'            { PT _ (TS _ 3) }
	'0'            { PT _ (TS _ 4) }
	'='            { PT _ (TS _ 5) }
	'S'            { PT _ (TS _ 6) }
	'\\'           { PT _ (TS _ 7) }
	'else'         { PT _ (TS _ 8) }
	'fix'          { PT _ (TS _ 9) }
	'if'           { PT _ (TS _ 10) }
	'in'           { PT _ (TS _ 11) }
	'let'          { PT _ (TS _ 12) }
	'minus_one'    { PT _ (TS _ 13) }
	'rec'          { PT _ (TS _ 14) }
	'then'         { PT _ (TS _ 15) }
	L_Id           { PT _ (T_Id $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pExp1    rule  1
	%start_pExp2    rule  2
	%start_pExp3    rule  3
	%start_pExp4    rule  4
	%start_pExp5    rule  5
	%start_pExp     rule  6
	Id              rule  7
	Program         rule  8
	Exp1            rules 9, 10
	Exp2            rules 11, 12, 13, 14, 15, 16
	Exp3            rules 17, 18
	Exp4            rules 19, 20, 21
	Exp5            rules 22, 23
	Exp             rule  24

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Program        goto state 29
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 30

State 1


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 28
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14

State 2


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp2           goto state 27
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14

State 3


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp3           goto state 26
	Exp4           goto state 13
	Exp5           goto state 14

State 4


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp4           goto state 25
	Exp5           goto state 14

State 5


	'('            shift, and enter state 16
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp5           goto state 24

State 6


	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 15

State 7


	L_Id           shift, and enter state 8


State 8

	Id -> L_Id .                                        (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'.'            reduce using rule 7
	'0'            reduce using rule 7
	'='            reduce using rule 7
	'S'            reduce using rule 7
	'else'         reduce using rule 7
	'in'           reduce using rule 7
	'then'         reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 9

	Exp5 -> Id .                                        (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	'0'            reduce using rule 22
	'='            reduce using rule 22
	'S'            reduce using rule 22
	'else'         reduce using rule 22
	'in'           reduce using rule 22
	'then'         reduce using rule 22
	L_Id           reduce using rule 22
	%eof           reduce using rule 22


State 10

	Exp -> Exp1 .                                       (rule 24)

	')'            reduce using rule 24
	'='            reduce using rule 24
	'else'         reduce using rule 24
	'in'           reduce using rule 24
	'then'         reduce using rule 24
	%eof           reduce using rule 24


State 11

	Exp1 -> Exp2 .                                      (rule 10)

	')'            reduce using rule 10
	'='            reduce using rule 10
	'else'         reduce using rule 10
	'in'           reduce using rule 10
	'then'         reduce using rule 10
	%eof           reduce using rule 10


State 12

	Exp2 -> Exp3 .                                      (rule 16)
	Exp3 -> Exp3 . Exp4                                 (rule 17)

	'('            shift, and enter state 16
	')'            reduce using rule 16
	'0'            shift, and enter state 17
	'='            reduce using rule 16
	'S'            shift, and enter state 18
	'else'         reduce using rule 16
	'in'           reduce using rule 16
	'then'         reduce using rule 16
	L_Id           shift, and enter state 8
	%eof           reduce using rule 16

	Id             goto state 9
	Exp4           goto state 31
	Exp5           goto state 14

State 13

	Exp3 -> Exp4 .                                      (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'0'            reduce using rule 18
	'='            reduce using rule 18
	'S'            reduce using rule 18
	'else'         reduce using rule 18
	'in'           reduce using rule 18
	'then'         reduce using rule 18
	L_Id           reduce using rule 18
	%eof           reduce using rule 18


State 14

	Exp4 -> Exp5 .                                      (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'0'            reduce using rule 21
	'='            reduce using rule 21
	'S'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'then'         reduce using rule 21
	L_Id           reduce using rule 21
	%eof           reduce using rule 21


State 15

	%start_pExp -> Exp .                                (rule 6)

	%eof           accept


State 16

	Exp5 -> '(' . Exp ')'                               (rule 23)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 39

State 17

	Exp4 -> '0' .                                       (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'0'            reduce using rule 19
	'='            reduce using rule 19
	'S'            reduce using rule 19
	'else'         reduce using rule 19
	'in'           reduce using rule 19
	'then'         reduce using rule 19
	L_Id           reduce using rule 19
	%eof           reduce using rule 19


State 18

	Exp4 -> 'S' . Exp4                                  (rule 20)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp4           goto state 38
	Exp5           goto state 14

State 19

	Exp1 -> '\\' . Id '.' Exp                           (rule 9)

	L_Id           shift, and enter state 8

	Id             goto state 37

State 20

	Exp2 -> 'fix' . Exp                                 (rule 14)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 36

State 21

	Exp2 -> 'if' . Exp '=' Exp 'then' Exp 'else' Exp    (rule 11)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 35

State 22

	Exp2 -> 'let' . Id '=' Exp 'in' Exp                 (rule 12)
	Exp2 -> 'let' . 'rec' Id '=' Exp 'in' Exp           (rule 13)

	'rec'          shift, and enter state 34
	L_Id           shift, and enter state 8

	Id             goto state 33

State 23

	Exp2 -> 'minus_one' . Exp                           (rule 15)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 32

State 24

	%start_pExp5 -> Exp5 .                              (rule 5)

	%eof           accept


State 25

	%start_pExp4 -> Exp4 .                              (rule 4)

	%eof           accept


State 26

	%start_pExp3 -> Exp3 .                              (rule 3)
	Exp3 -> Exp3 . Exp4                                 (rule 17)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	L_Id           shift, and enter state 8
	%eof           accept

	Id             goto state 9
	Exp4           goto state 31
	Exp5           goto state 14

State 27

	%start_pExp2 -> Exp2 .                              (rule 2)

	%eof           accept


State 28

	%start_pExp1 -> Exp1 .                              (rule 1)

	%eof           accept


State 29

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 30

	Program -> Exp .                                    (rule 8)

	%eof           reduce using rule 8


State 31

	Exp3 -> Exp3 Exp4 .                                 (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'0'            reduce using rule 17
	'='            reduce using rule 17
	'S'            reduce using rule 17
	'else'         reduce using rule 17
	'in'           reduce using rule 17
	'then'         reduce using rule 17
	L_Id           reduce using rule 17
	%eof           reduce using rule 17


State 32

	Exp2 -> 'minus_one' Exp .                           (rule 15)

	')'            reduce using rule 15
	'='            reduce using rule 15
	'else'         reduce using rule 15
	'in'           reduce using rule 15
	'then'         reduce using rule 15
	%eof           reduce using rule 15


State 33

	Exp2 -> 'let' Id . '=' Exp 'in' Exp                 (rule 12)

	'='            shift, and enter state 44


State 34

	Exp2 -> 'let' 'rec' . Id '=' Exp 'in' Exp           (rule 13)

	L_Id           shift, and enter state 8

	Id             goto state 43

State 35

	Exp2 -> 'if' Exp . '=' Exp 'then' Exp 'else' Exp    (rule 11)

	'='            shift, and enter state 42


State 36

	Exp2 -> 'fix' Exp .                                 (rule 14)

	')'            reduce using rule 14
	'='            reduce using rule 14
	'else'         reduce using rule 14
	'in'           reduce using rule 14
	'then'         reduce using rule 14
	%eof           reduce using rule 14


State 37

	Exp1 -> '\\' Id . '.' Exp                           (rule 9)

	'.'            shift, and enter state 41


State 38

	Exp4 -> 'S' Exp4 .                                  (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'0'            reduce using rule 20
	'='            reduce using rule 20
	'S'            reduce using rule 20
	'else'         reduce using rule 20
	'in'           reduce using rule 20
	'then'         reduce using rule 20
	L_Id           reduce using rule 20
	%eof           reduce using rule 20


State 39

	Exp5 -> '(' Exp . ')'                               (rule 23)

	')'            shift, and enter state 40


State 40

	Exp5 -> '(' Exp ')' .                               (rule 23)

	'('            reduce using rule 23
	')'            reduce using rule 23
	'0'            reduce using rule 23
	'='            reduce using rule 23
	'S'            reduce using rule 23
	'else'         reduce using rule 23
	'in'           reduce using rule 23
	'then'         reduce using rule 23
	L_Id           reduce using rule 23
	%eof           reduce using rule 23


State 41

	Exp1 -> '\\' Id '.' . Exp                           (rule 9)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 48

State 42

	Exp2 -> 'if' Exp '=' . Exp 'then' Exp 'else' Exp    (rule 11)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 47

State 43

	Exp2 -> 'let' 'rec' Id . '=' Exp 'in' Exp           (rule 13)

	'='            shift, and enter state 46


State 44

	Exp2 -> 'let' Id '=' . Exp 'in' Exp                 (rule 12)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 45

State 45

	Exp2 -> 'let' Id '=' Exp . 'in' Exp                 (rule 12)

	'in'           shift, and enter state 51


State 46

	Exp2 -> 'let' 'rec' Id '=' . Exp 'in' Exp           (rule 13)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 50

State 47

	Exp2 -> 'if' Exp '=' Exp . 'then' Exp 'else' Exp    (rule 11)

	'then'         shift, and enter state 49


State 48

	Exp1 -> '\\' Id '.' Exp .                           (rule 9)

	')'            reduce using rule 9
	'='            reduce using rule 9
	'else'         reduce using rule 9
	'in'           reduce using rule 9
	'then'         reduce using rule 9
	%eof           reduce using rule 9


State 49

	Exp2 -> 'if' Exp '=' Exp 'then' . Exp 'else' Exp    (rule 11)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 54

State 50

	Exp2 -> 'let' 'rec' Id '=' Exp . 'in' Exp           (rule 13)

	'in'           shift, and enter state 53


State 51

	Exp2 -> 'let' Id '=' Exp 'in' . Exp                 (rule 12)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 52

State 52

	Exp2 -> 'let' Id '=' Exp 'in' Exp .                 (rule 12)

	')'            reduce using rule 12
	'='            reduce using rule 12
	'else'         reduce using rule 12
	'in'           reduce using rule 12
	'then'         reduce using rule 12
	%eof           reduce using rule 12


State 53

	Exp2 -> 'let' 'rec' Id '=' Exp 'in' . Exp           (rule 13)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 56

State 54

	Exp2 -> 'if' Exp '=' Exp 'then' Exp . 'else' Exp    (rule 11)

	'else'         shift, and enter state 55


State 55

	Exp2 -> 'if' Exp '=' Exp 'then' Exp 'else' . Exp    (rule 11)

	'('            shift, and enter state 16
	'0'            shift, and enter state 17
	'S'            shift, and enter state 18
	'\\'           shift, and enter state 19
	'fix'          shift, and enter state 20
	'if'           shift, and enter state 21
	'let'          shift, and enter state 22
	'minus_one'    shift, and enter state 23
	L_Id           shift, and enter state 8

	Id             goto state 9
	Exp1           goto state 10
	Exp2           goto state 11
	Exp3           goto state 12
	Exp4           goto state 13
	Exp5           goto state 14
	Exp            goto state 57

State 56

	Exp2 -> 'let' 'rec' Id '=' Exp 'in' Exp .           (rule 13)

	')'            reduce using rule 13
	'='            reduce using rule 13
	'else'         reduce using rule 13
	'in'           reduce using rule 13
	'then'         reduce using rule 13
	%eof           reduce using rule 13


State 57

	Exp2 -> 'if' Exp '=' Exp 'then' Exp 'else' Exp .    (rule 11)

	')'            reduce using rule 11
	'='            reduce using rule 11
	'else'         reduce using rule 11
	'in'           reduce using rule 11
	'then'         reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 25
Number of terminals: 16
Number of non-terminals: 15
Number of states: 58
