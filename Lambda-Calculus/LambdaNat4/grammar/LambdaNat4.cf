---------------------------------------------------------------
-- Lambda Calculus 4 with numbers and conditional and recursion
---------------------------------------------------------------

Prog.      Program ::= Exp ;  
EAbs.      Exp1 ::= "\\" Id "." Exp ;   
EIf.       Exp2 ::= "if" Exp "=" Exp "then" Exp "else" Exp ; 
ELet.      Exp2 ::= "let" Id "=" Exp "in" Exp ; -- for comparison with "let rec" ; 
ERec.      Exp2 ::= "let rec" Id "=" Exp "in" Exp ;
EFix.      Exp2 ::= "fix" Exp ; -- to implement "let rec"
EMinusOne. Exp2 ::= "minus_one" Exp ;
EApp.      Exp3 ::= Exp3 Exp4 ;  
ENat0.     Exp4 ::= "0" ; 
ENatS.     Exp4 ::= "S" Exp4 ; 
EVar.      Exp5 ::= Id ;  

coercions Exp 5 ;

token Id (letter (letter | digit | '_')*) ;

comment "//" ;
comment "/*" "*/" ;
